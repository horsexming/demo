<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" 
       xmlns:security="http://www.springframework.org/schema/security"      
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-5.1.0.xsd
     http://mybatis.org/schema/mybatis-spring 
     http://mybatis.org/schema/mybatis-spring.xsd">
     

<!-- 配置扫描的包 -->
<context:component-scan base-package="com.mbm.*"></context:component-scan>
<!-- 配置数据源 -->
<context:property-placeholder location="classpath:dbconfig.properties"/>
<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.url}" />
    	<property name="driverClass" value="${jdbc.driver}"/>
    	<property name="user" value="${jdbc.user}"/>
    	<property name="password" value="${jdbc.password}"/>
    	
</bean>
<!-- 配置整合mybatis -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   	<property name="configLocation" value="classpath:mybatis-config.xml" />
	   	<property name="dataSource" ref="pooledDataSource" />
	   	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
   </bean>
   
   <!-- 整合sping jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="pooledDataSource"/>
	</bean>
	<bean id="sqlDao" class="com.mbm.springdao.SqlDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
    
    <!-- 配置扫描器，将mybatis的接口的实现加入到ioc容器中 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <!-- 扫描所有的dao实现 ,加入到IOC容器中-->
	   	<property name="basePackage" value="com.mbm.dao"></property>
   </bean> 
   <!-- 配置事务控制 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="pooledDataSource" />
   </bean>
   <!-- 配置基于注解的事务配置，xml的事务控制-->
   <!-- 开启基于注解的事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> --> 
  <!-- 开启基于xml的事务 -->
   <aop:config>
	  	<!-- 切入点表达式 -->
	  	<aop:pointcut expression="execution(* com.mbm.service..*(..))" id="txPointcut"/>
	  	<!-- 事务增强 -->
	  	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
   </aop:config>
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
  	<tx:attributes>
  	<!-- 所有的方法都是事务方法 -->
  		<tx:method name="*"/>
  		<tx:method name="get*" read-only="true"/>
  	</tx:attributes>
  </tx:advice>
</beans>